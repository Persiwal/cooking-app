generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

model Account {
  id                Int     @id @default(autoincrement()) @map("_id")
  userId            Int     @map("user_id")
  user              User    @relation(fields: [userId], references: [id])
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?    @map("expires_at")
  tokenType         String? @map("token_type")
  scope             String?
  idToken           String? @map("id_token")
  sessionState      String? @map("session_state")
}

model User {
  id             Int       @id @default(autoincrement()) @map("_id")
  name           String    @unique
  email          String    @unique
  emailVerified  DateTime? @map("email_verified")
  image          String?
  accounts       Account[]
  hashedPassword String?   @map("hashed_password")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  role           Role      @default(USER)
  recipe         Recipe[]
}

model Recipe {
  id               Int                @id @default(autoincrement())
  image            String?            @default("")
  title            String
  description      String?
  userId           Int
  user             User               @relation(fields: [userId], references: [id])
  cuisine          String?            @default("Unknown")
  difficulty       Difficulty         @default(EASY)
  prepareTime      Int                @default(3600) @map("prepare_time") // in seconds
  numberOfPortions Int                @default(1) @map("number_of_portions")
  ingredients      RecipeIngredient[]
  steps            RecipeStep[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model RecipeStep {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  order     Int
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([recipeId, order])
}

model Ingredient {
  id      Int                @id @default(autoincrement())
  name    String             @unique
  unit    String
  recipes RecipeIngredient[]
}

model RecipeIngredient {
  id           Int        @id @default(autoincrement())
  recipeId     Int
  ingredientId Int
  quantity     Float
  recipe       Recipe     @relation(fields: [recipeId], references: [id])
  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
}
